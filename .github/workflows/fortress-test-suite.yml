name: Fortress Test Suite

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  standard-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest
          which mage
          mage -version

      - name: Run standard tests
        run: mage testDefault

  coverage-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Run tests with coverage
        run: mage testCover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  race-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Run tests with race detector
        run: mage testRace

  coverage-race-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Run tests with coverage and race detector
        run: mage testCover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: racetests
          name: codecov-race
          fail_ci_if_error: false

  fuzz-tests:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Run fuzz tests
        run: |
          echo "## Running Fuzz Tests"
          echo ""
          echo "Fuzz testing temporarily disabled - will be re-enabled once tests are updated"
          echo ""

  loc-metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Count lines of code
        run: |
          echo "## Lines of Code Metrics"
          mage metricsLOC

  test-matrix:
    strategy:
      matrix:
        go-version: ["1.24"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install Mage
        run: go install github.com/magefile/mage@latest

      - name: Run tests
        run: mage testUnit

  summary:
    needs: [standard-tests, coverage-tests, race-tests, coverage-race-tests, fuzz-tests, loc-metrics, test-matrix]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Test Suite Summary
        run: |
          echo "## Test Suite Summary"
          echo ""
          echo "### Test Results:"
          echo "- Standard Tests: ${{ needs.standard-tests.result }}"
          echo "- Coverage Tests: ${{ needs.coverage-tests.result }}"
          echo "- Race Tests: ${{ needs.race-tests.result }}"
          echo "- Coverage + Race Tests: ${{ needs.coverage-race-tests.result }}"
          echo "- Fuzz Tests: ${{ needs.fuzz-tests.result }}"
          echo "- LOC Metrics: ${{ needs.loc-metrics.result }}"
          echo "- Matrix Tests: ${{ needs.test-matrix.result }}"
          echo ""
          echo "All test suites have completed."

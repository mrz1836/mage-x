name: Fortress Test Mage

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  test-mage-installation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: |
          echo "## Installing Mage"
          go install github.com/magefile/mage@latest

          echo "## Verifying Installation"
          which mage
          mage -version

          echo "## Mage installation successful ‚úÖ"

  test-mage-core:
    needs: test-mage-installation
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        test:
          - {name: "Help System", cmd: "mage -l", desc: "List all available targets"}
          - {name: "Version", cmd: "mage -version", desc: "Show mage version"}
          - {name: "Default Target", cmd: "mage", desc: "Run default target"}
          - {name: "Build", cmd: "mage build", desc: "Test build functionality"}
          - {name: "Clean", cmd: "mage buildClean", desc: "Test clean functionality"}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: go install github.com/magefile/mage@latest

      - name: Test ${{ matrix.test.name }}
        run: |
          echo "## Testing: ${{ matrix.test.name }}"
          echo "Command: ${{ matrix.test.cmd }}"
          echo "Purpose: ${{ matrix.test.desc }}"
          echo "----------------------------------------"

          ${{ matrix.test.cmd }}

          echo "‚úÖ ${{ matrix.test.name }} completed successfully"

  test-mage-namespaces:
    needs: test-mage-installation
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        namespace:
          - {name: "Build", cmds: ["mage build:default", "mage build:clean"]}
          - {name: "Test", cmds: ["mage test:unit", "mage test:short"]}
          - {name: "Lint", cmds: ["mage lint:version"]}
          - {name: "Tools", cmds: ["mage tools:install"]}
          - {name: "Deps", cmds: ["mage deps:download"]}
          - {name: "Mod", cmds: ["mage mod:download"]}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: go install github.com/magefile/mage@latest

      - name: Test ${{ matrix.namespace.name }} Namespace
        run: |
          echo "## Testing ${{ matrix.namespace.name }} Namespace"
          echo "========================================="

          # Run commands based on namespace
          case "${{ matrix.namespace.name }}" in
            "Build")
              echo "### Running: mage build"
              mage build
              echo "### Running: mage buildClean"
              mage buildClean
              ;;
            "Test")
              echo "### Running: mage testUnit"
              mage testUnit
              ;;
            "Lint")
              echo "### Running: mage lintDefault"
              mage lintDefault || echo "Lint may not be fully configured"
              ;;
            "Tools")
              echo "### Running: mage toolsInstall"
              mage toolsInstall
              ;;
            "Deps")
              echo "### Running: mage depsDownload"
              mage depsDownload
              ;;
            "Mod")
              echo "### Running: mage modDownload"
              mage modDownload
              ;;
          esac

          echo ""
          echo "‚úÖ ${{ matrix.namespace.name }} namespace test completed"

  test-mage-help:
    needs: test-mage-installation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Mage
        run: go install github.com/magefile/mage@latest

      - name: Test Help System
        run: |
          echo "## Testing Mage Help System"
          echo ""

          echo "### List all targets"
          mage -l

          echo ""
          echo "### Verify namespace targets are visible"
          if mage -l | grep -q "build"; then
            echo "‚úÖ Build namespace targets found"
          else
            echo "‚ùå Build namespace targets not found"
            exit 1
          fi

          if mage -l | grep -q "test"; then
            echo "‚úÖ Test namespace targets found"
          else
            echo "‚ùå Test namespace targets not found"
            exit 1
          fi

          echo ""
          echo "‚úÖ Help system working correctly"

  test-cross-platform:
    needs: test-mage-installation
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install and Test Mage on ${{ matrix.os }}
        run: |
          echo "## Testing Mage on ${{ matrix.os }}"

          # Install mage
          go install github.com/magefile/mage@latest

          # Test basic functionality
          mage -version
          mage -l

          # Run a simple build
          mage buildClean

          echo "‚úÖ Mage works correctly on ${{ matrix.os }}"

  summary:
    needs: [test-mage-installation, test-mage-core, test-mage-namespaces, test-mage-help, test-cross-platform]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Mage Test Summary
        run: |
          echo "# ü™Ñ Mage Functionality Test Summary"
          echo ""
          echo "## Test Results"
          echo ""
          echo "| Test Suite | Status |"
          echo "|------------|--------|"
          echo "| Installation | ${{ needs.test-mage-installation.result }} |"
          echo "| Core Functions | ${{ needs.test-mage-core.result }} |"
          echo "| Namespaces | ${{ needs.test-mage-namespaces.result }} |"
          echo "| Help System | ${{ needs.test-mage-help.result }} |"
          echo "| Cross-Platform | ${{ needs.test-cross-platform.result }} |"
          echo ""

          # Determine overall status
          if [[ "${{ needs.test-mage-installation.result }}" == "failure" ]] || \
             [[ "${{ needs.test-mage-core.result }}" == "failure" ]] || \
             [[ "${{ needs.test-mage-namespaces.result }}" == "failure" ]] || \
             [[ "${{ needs.test-mage-help.result }}" == "failure" ]] || \
             [[ "${{ needs.test-cross-platform.result }}" == "failure" ]]; then
            echo "## ‚ùå Some Mage tests failed"
            exit 1
          else
            echo "## ‚úÖ All Mage tests passed"
            echo ""
            echo "Mage is properly installed and functioning correctly across all tested scenarios."
          fi
